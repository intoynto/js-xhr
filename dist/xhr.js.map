{"version":3,"file":"xhr.js","mappings":"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","sources":["webpack://xhr/webpack/universalModuleDefinition","webpack://xhr/./src/ajax.ts","webpack://xhr/./src/createFormData.ts","webpack://xhr/./src/index.ts","webpack://xhr/./src/observe.ts","webpack://xhr/./src/serialize.ts","webpack://xhr/webpack/bootstrap","webpack://xhr/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"xhr\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xhr\"] = factory();\n\telse\n\t\troot[\"xhr\"] = factory();\n})(self, function() {\nreturn ","/**\r\n * @author intoy\r\n * @email intoynto@gmail.com\r\n * @create date 2020-10-11 22:32:10\r\n * @modify date 2020-10-22 10:41:12\r\n * @desc XML Http Request\r\n */\r\n\r\nimport { getObserve } from \".\";\r\nimport { createFormData } from \"./createFormData\";\r\nimport {serialize} from \"./serialize\";\r\n\r\ninterface ILoose {\r\n    [key: string]: any,\r\n}\r\nexport type IUploadProgress = {\r\n    loaded:number\r\n    total:number\r\n    percentage:number\r\n}\r\n\r\nexport interface Iajax extends ILoose {\r\n    url:string,    \r\n    method?:string,\r\n    type?:string,\r\n    headers?:any,\r\n    params?:any,   \r\n    formElement?:HTMLFormElement,\r\n    formData?:FormData\r\n    responseType?:string,    \r\n    onResolve?:(xhr:XMLHttpRequest)=>void\r\n    uploadProgress?:(props:IUploadProgress)=>void\r\n}\r\n\r\nexport interface IajaxException {\r\n    title:string\r\n    status:number\r\n    code:number\r\n    statusText:string\r\n    message:string\r\n    description:string\r\n    xhr:XMLHttpRequest\r\n    [p:string]:any,\r\n}\r\n\r\n\r\ntype IrunAjaxResolveOptions={\r\n    xhr:XMLHttpRequest\r\n    formData:FormData\r\n    handleToJson:boolean\r\n}\r\n\r\ntype IrunAjaxResolve=(props:IrunAjaxResolveOptions)=>void\r\n\r\nfunction runAjax({...ops}:Iajax)\r\n{   \r\n    return new Promise((resolve:IrunAjaxResolve,reject)=>{              \r\n        const mType=(ops.method?ops.method:ops.type?ops.type:\"GET\").toString().toUpperCase().trim();\r\n        const rspType=ops.responseType||\"json\"; //default response type of json\r\n\r\n        const dataParams=ops.params && typeof ops.params===\"object\"?ops.params:ops.data && typeof ops.data===\"object\"?ops.data:null;\r\n        const isDataParams=dataParams!==undefined && dataParams!==null;\r\n        const handleToJson=(rspType||\"\").toLowerCase().trim()===\"json\";\r\n\r\n        let sendF;\r\n        let toUrl=(ops.url||\"\").toString().trim();\r\n        \r\n        if(ops.formElement)\r\n        {                \r\n            sendF=new FormData(ops.formElement);\r\n\r\n            //remove empty upload\r\n            const inputs=ops.formElement.querySelectorAll('input[type=file]');            \r\n            const removes=[];\r\n            if(inputs.length>0)\r\n            {\r\n                for(let i=0; i<inputs.length; i++)\r\n                {\r\n                    const ii:HTMLInputElement=inputs[i] as HTMLInputElement;\r\n                    let file=ii.files && ii.files.length>0?ii.files[0]:null;\r\n                    if(!file)\r\n                    {\r\n                        removes.push(ii.name);\r\n                    }                   \r\n                }\r\n            }                        \r\n            for(let i=0; i<removes.length; i++)\r\n            {\r\n                ///remove upload empty\r\n                sendF.delete(removes[i]);\r\n            }\r\n        }\r\n        else\r\n        if(ops.formData){            \r\n            sendF=ops.formData;\r\n        }\r\n        \r\n        if(isDataParams){          \r\n            if (sendF){\r\n                createFormData(dataParams, sendF);\r\n            }            \r\n            else {                \r\n                if(mType===\"GET\") \r\n                {\r\n                    let ser=serialize(dataParams);\r\n                    if(ser.length>0){\r\n                        if(toUrl.indexOf(\"?\")<0){\r\n                            toUrl+=\"?\";\r\n                        }\r\n                        toUrl+=ser;\r\n                    }\r\n                }  \r\n                else {\r\n                    sendF=createFormData(dataParams);\r\n                }              \r\n            } \r\n        }\r\n\r\n\r\n        const xhr=new XMLHttpRequest();  \r\n            \r\n        xhr.open(mType,toUrl);\r\n        \r\n        if(ops.headers)\r\n        {\r\n            for(let p in ops.headers){                \r\n                xhr.setRequestHeader(p,ops.headers[p]);\r\n            }\r\n        }        \r\n        if(handleToJson)\r\n        {\r\n            xhr.setRequestHeader('accept','application/json');\r\n        }\r\n\r\n        resolve({\r\n            xhr:xhr,\r\n            formData:sendF as FormData,\r\n            handleToJson:handleToJson\r\n        });\r\n    });\r\n}\r\n\r\nexport function ajax(ops:Iajax)\r\n{\r\n    const dispatchObserve=(xhr:XMLHttpRequest)=>{\r\n        getObserve().listen(xhr);\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        runAjax(ops)\r\n        .then((props:IrunAjaxResolveOptions)=>\r\n        {\r\n            const {handleToJson}=props;\r\n            const onLoadEnd=(ev:ProgressEvent<XMLHttpRequestEventTarget>)=>{\r\n                const t:XMLHttpRequest=ev.target as XMLHttpRequest;\r\n                \r\n                const pe:IajaxException={\r\n                    title:'Throw',\r\n                    status:xhr.status,\r\n                    code:xhr.status,\r\n                    statusText:xhr.statusText,\r\n                    message:xhr.statusText,\r\n                    description:'',\r\n                    xhr:xhr,\r\n                };\r\n\r\n                const berhasil=t.status===200;\r\n                let isjson;\r\n                if(t.responseType.toString().toLowerCase()!=='json'){\r\n                    let ct=t.getResponseHeader('content-type');\r\n                    ct=ct?ct.toString().toLowerCase().trim():'';\r\n                    ct.split(';');\r\n                    isjson=ct.indexOf('application/json')>0;                   \r\n                }  \r\n                if(!berhasil)\r\n                {\r\n                    pe.title = 'Throw ' + xhr.status;\r\n                    try {\r\n                        const t = JSON.parse(xhr.responseText);\r\n                        if (typeof t === 'object') {\r\n                            const ce = Array.isArray(t.exception) ? t.exception[0] : null;\r\n                            if (ce) {\r\n                                pe.message = ce.message;\r\n                                pe.description = ce.description ? ce.description : ce.message;\r\n                            }\r\n                            else {\r\n                                pe.message = t.error && t.error.message ? t.error.message\r\n                                    : t.message ? t.message\r\n                                        : pe.message;\r\n\r\n                                pe.description = t.error && t.error.description ? t.error.description\r\n                                    : t.description ? t.description\r\n                                        : pe.description;\r\n                            }\r\n\r\n                        }\r\n                        dispatchObserve(t);\r\n                        reject(pe);\r\n                    }\r\n                    catch (e) {\r\n                        dispatchObserve(t);\r\n                        reject(pe);\r\n                    }\r\n                    return;\r\n                }               \r\n\r\n                if(handleToJson || isjson)\r\n                {\r\n                    let str=(xhr.responseText||\"\").toString().trim();\r\n                    if(str.length<1)\r\n                    {\r\n                        pe.message='Tidak ada result dari server.';\r\n                        dispatchObserve(t);\r\n                        reject(pe);\r\n                        return;\r\n                    }\r\n\r\n                    //try to json\r\n                    try {\r\n                        let data = JSON.parse(xhr.responseText);\r\n                        dispatchObserve(t);\r\n                        resolve(data);\r\n                    }\r\n                    catch (e: any) \r\n                    {\r\n                        pe.code = 409; //HTTP Conflict\r\n                        pe.message = 'Parse error. ' + (e.message ? e.message : \"Unknown error.\");\r\n                        dispatchObserve(t);\r\n                        reject(pe);\r\n                    }\r\n\r\n                    return;\r\n                }\r\n                dispatchObserve(t);\r\n                resolve(xhr.response);\r\n            };\r\n\r\n            const onError=(ev:ProgressEvent<XMLHttpRequestEventTarget>)=>{\r\n                const t:XMLHttpRequest=ev.target as XMLHttpRequest;\r\n                dispatchObserve(t);\r\n                reject({title:\"Throw\",message:\"Unknown error.\",xhr:t});\r\n            }\r\n\r\n            const {xhr,formData}=props;          \r\n            \r\n            // atach event\r\n            xhr.addEventListener(\"loadend\",onLoadEnd);\r\n            xhr.addEventListener(\"error\",onError);\r\n            if(typeof ops.uploadProgress==='function')\r\n            {\r\n                const upProgres:(newProps:IUploadProgress)=>void=ops.uploadProgress;\r\n                xhr.upload.addEventListener(\"progress\",function(ev:ProgressEvent<XMLHttpRequestEventTarget>){\r\n                    const {loaded,total}=ev;\r\n                    const percentage=(loaded / total) * 100;\r\n                    upProgres({loaded,total,percentage});\r\n                });\r\n            }\r\n            // send data\r\n            xhr.send(formData);\r\n        })\r\n        .catch((e:any)=>{\r\n            reject({title:\"Throw\",message:e && e.message?e.message:\"Unknown error.\"});\r\n        });\r\n    });\r\n}","export function createFormData(obj:any,formDataAppending?:FormData,namespace?:any){\r\n    const formData=formDataAppending?formDataAppending:new FormData();\r\n    for(let property in obj){\r\n        const formKey=namespace?`${namespace}[${property}]`:property;\r\n        if(obj[property] instanceof Date){\r\n            formData.append(formKey,obj[property].toString());\r\n        }\r\n        else if(Array.isArray(obj[property]) && obj[property].length>0){\r\n            const args=obj[property];\r\n            for(let i=0; i<args.length; i++){               \r\n                if(typeof args[i]===\"object\"){\r\n                    createFormData(args[i],formData,`${formKey}[${i}]`)\r\n                }\r\n                else {\r\n                   formData.append(`${formKey}[]`,args[i]); \r\n                }\r\n            }\r\n        }\r\n        else if(typeof obj[property]===\"object\" && !(obj[property] instanceof File))\r\n        {            \r\n            createFormData(obj[property],formData,formKey);\r\n        }\r\n        else{            \r\n            const val=obj[property];\r\n            if(val!==null && val!==undefined)\r\n            {               \r\n                formData.append(formKey,val);\r\n            }\r\n        }\r\n    }\r\n    return formData;\r\n}","import {ajax} from \"./ajax\";\r\nimport {getObserve} from \"./observe\";\r\n\r\nexport {ajax,getObserve};\r\n\r\nexport type {Iajax} from \"./ajax\";","type Ilistener=(xhr:XMLHttpRequest)=>void\r\n\r\ninterface IObjserveAjax {\r\n    listen:(xhr:XMLHttpRequest)=>void\r\n    subscribe:(listener:Ilistener)=>string\r\n    unSubscribe:(key:string)=>void\r\n}\r\n\r\n\r\nclass ObserveAjax implements IObjserveAjax \r\n{   \r\n    private listenerKeys:string[]=[]; \r\n    private listenters:any;\r\n    constructor()\r\n    {\r\n        this.listenters={};\r\n        this.subscribe=this.subscribe.bind(this);\r\n        this.unSubscribe=this.unSubscribe.bind(this);\r\n        this.listen=this.listen.bind(this);\r\n    }\r\n\r\n    subscribe(listener:Ilistener){\r\n        const key:string=Math.random().toString(36);\r\n        this.listenters[key]=listener;\r\n        return key;\r\n    }\r\n\r\n    unSubscribe(key:string){\r\n        const iof=this.listenerKeys.indexOf(key);\r\n        if(iof>=0)\r\n        {\r\n            this.listenerKeys.splice(iof);\r\n            delete this.listenters[key];\r\n        }\r\n    }\r\n\r\n    listen(xhr:XMLHttpRequest)\r\n    {\r\n        for(let p in this.listenters)\r\n        {\r\n            const val=this.listenters[p];\r\n            if(typeof val===\"function\")\r\n            {\r\n                try {\r\n                    val(xhr);\r\n                }\r\n                catch(e)\r\n                {\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet observe:IObjserveAjax|null=null;\r\n\r\nexport function getObserve():IObjserveAjax\r\n{\r\n    if(!observe)\r\n    {\r\n        observe=new ObserveAjax();\r\n    }\r\n    return observe;\r\n}","export function serialize(obj?:any,key?:any,list?:any[]){\r\n    list=list || [];    \r\n    if(typeof(obj)===\"object\"){\r\n        for(let idx in obj){\r\n            const val=obj[idx];\r\n            if(val!==null && val!==undefined){\r\n                serialize(val,key?key+'['+idx+']':idx,list);\r\n            }           \r\n        }\r\n    }\r\n    else{\r\n        list.push(key+='='+encodeURIComponent(obj));\r\n    }\r\n    return list.join('&');\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(991);\n"],"names":["root","factory","exports","module","define","amd","self","ops","dispatchObserve","xhr","getObserve","listen","Promise","resolve","reject","sendF","mType","method","type","toString","toUpperCase","trim","rspType","responseType","dataParams","params","data","isDataParams","handleToJson","toLowerCase","toUrl","url","formElement","FormData","inputs","querySelectorAll","removes","length","i","ii","files","push","name","delete","formData","createFormData","ser","serialize","indexOf","XMLHttpRequest","open","headers","p","setRequestHeader","runAjax","then","props","addEventListener","ev","isjson","t","target","pe","title","status","code","statusText","message","description","berhasil","ct","getResponseHeader","split","responseText","JSON","parse","e","response","ce","Array","isArray","exception","error","uploadProgress","upload","loaded","total","percentage","send","catch","obj","formDataAppending","namespace","property","formKey","Date","append","args","File","val","ajax","get","listenerKeys","this","listenters","subscribe","bind","unSubscribe","listener","key","Math","random","iof","splice","observe","ObserveAjax","list","idx","encodeURIComponent","join","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}